---
import type { GetStaticPathsResult } from "astro";
import { CollectionEntry, getCollection } from "astro:content";
import { sortByDate } from "../../date";
import Layout from "../../layouts/Layout.astro";
import BlogPost from "../../components/BlogPost.astro";
import { filterByTag } from "../../content/config";

export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const allPosts = await getCollection("posts");
  const publicPosts = allPosts.filter((post) => !post.data.draft);

  // Get all unique tags
  const uniqueTags = [
    ...new Set(publicPosts.flatMap((post) => post.data.tags || [])),
  ];

  // For each tag, create a route
  return uniqueTags.map((tag) => {
    const filteredPosts = filterByTag(publicPosts, tag);
    const sortedPosts = sortByDate(filteredPosts);

    return {
      params: { tag },
      props: { tag, posts: sortedPosts },
    };
  });
}

interface Props {
  tag: string;
  posts: CollectionEntry<"posts">[];
}

const { tag, posts } = Astro.props;
---

<Layout title={`Tag: ${tag}`}>
  <div class="px-4">
    <h1
      class="border-l-4 border-blue-500 pl-2 text-2xl font-semibold text-gray-800 dark:text-slate-100"
    >
      Posts tagged with "{tag}"
    </h1>
    <section aria-label="Blog post list">
      <ul class="flex flex-col text-left">
        {
          posts.map((post) => (
            <li class="mb-4 flex flex-col flex-wrap gap-x-2 sm:flex-row [&_q]:w-full">
              <BlogPost post={post} withDesc={true} />
            </li>
          ))
        }
      </ul>

      {
        posts.length === 0 && (
          <p class="mt-8 text-center text-gray-600 dark:text-gray-400">
            No posts found with this tag.
          </p>
        )
      }

      <div class="mt-8">
        <a
          href="/tags"
          class="text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300"
        >
          ‚Üê Back to all tags
        </a>
      </div>
    </section>
  </div>
</Layout>
